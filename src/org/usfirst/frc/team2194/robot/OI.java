// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc.team2194.robot;

import org.usfirst.frc.team2194.robot.AutonomousShoot.AutoShootGroup;
import org.usfirst.frc.team2194.robot.AutonomousShoot.UseGoalVisionToggle;
import org.usfirst.frc.team2194.robot.commands.CancelAll;
import org.usfirst.frc.team2194.robot.commands.ClearRobotStuck;
import org.usfirst.frc.team2194.robot.commands.ChoiceSelections.SelectChoices;
import org.usfirst.frc.team2194.robot.commands.ChoiceSelections.SelectedDefense;
import org.usfirst.frc.team2194.robot.commands.ChoiceSelections.SelectedSlotMove;
import org.usfirst.frc.team2194.robot.commands.Gyro.ResetGyro;
import org.usfirst.frc.team2194.robot.commands.Gyro.SetTargetYaw;
import org.usfirst.frc.team2194.robot.commands.Gyro.ToggleGyroOnOff;
import org.usfirst.frc.team2194.robot.commands.Gyro.ToggleRollComp;
import org.usfirst.frc.team2194.robot.commands.Gyro.ToggleYawComp;
import org.usfirst.frc.team2194.robot.commands.Gyro.ZeroGyroYaw;
import org.usfirst.frc.team2194.robot.commands.Joysticks.SingleJoystickToggle;
import org.usfirst.frc.team2194.robot.commands.Lifter.JogDownLifter;
import org.usfirst.frc.team2194.robot.commands.Lifter.JogUpLifter;
import org.usfirst.frc.team2194.robot.commands.Manipulators.LiftOneLower;
import org.usfirst.frc.team2194.robot.commands.Manipulators.LiftOneRaise;
import org.usfirst.frc.team2194.robot.commands.Manipulators.LiftTwoLower;
import org.usfirst.frc.team2194.robot.commands.Manipulators.LiftTwoRaise;
import org.usfirst.frc.team2194.robot.commands.Manipulators.SolenoidToggleLift1;
import org.usfirst.frc.team2194.robot.commands.Manipulators.SolenoidToggleLift2;
import org.usfirst.frc.team2194.robot.commands.Manipulators.SolenoidTogglePortChev;
import org.usfirst.frc.team2194.robot.commands.Manipulators.SolenoidToggleShootBall;
import org.usfirst.frc.team2194.robot.commands.PIDSets.SetPIDFLinearPosition;
import org.usfirst.frc.team2194.robot.commands.PIDSets.SetPIDFMotors;
import org.usfirst.frc.team2194.robot.commands.PIDSets.SetPIDFMotorsGyro;
import org.usfirst.frc.team2194.robot.commands.PIDSets.TogglePIDMotors;
import org.usfirst.frc.team2194.robot.commands.RobotMotion.EngageHighGear;
import org.usfirst.frc.team2194.robot.commands.RobotMotion.EngageLowGear;
import org.usfirst.frc.team2194.robot.commands.RobotMotion.GetOrientData;
import org.usfirst.frc.team2194.robot.commands.RobotMotion.GetPitchData;
import org.usfirst.frc.team2194.robot.commands.RobotMotion.GetPositionDataLinear;
import org.usfirst.frc.team2194.robot.commands.RobotMotion.ResetEncoders;
import org.usfirst.frc.team2194.robot.commands.RobotMotion.SetWheelDiameter;
import org.usfirst.frc.team2194.robot.commands.Shooter.DisableSoftLimits;
import org.usfirst.frc.team2194.robot.commands.Shooter.FlashlightToggle;
import org.usfirst.frc.team2194.robot.commands.Shooter.GetAngleShooterData;
import org.usfirst.frc.team2194.robot.commands.Shooter.GetBothShootersData;
import org.usfirst.frc.team2194.robot.commands.Shooter.GetLeftShooterData;
import org.usfirst.frc.team2194.robot.commands.Shooter.GetRightShooterData;
import org.usfirst.frc.team2194.robot.commands.Shooter.GetVisionOrientData;
import org.usfirst.frc.team2194.robot.commands.Shooter.IntakeBall;
import org.usfirst.frc.team2194.robot.commands.Shooter.JogMinusShooter;
import org.usfirst.frc.team2194.robot.commands.Shooter.JogPlusShooter;
import org.usfirst.frc.team2194.robot.commands.Shooter.OuttakeBall;
import org.usfirst.frc.team2194.robot.commands.Shooter.PositionAngleShooter;
import org.usfirst.frc.team2194.robot.commands.Shooter.PositionAngleShooterToCamera;
import org.usfirst.frc.team2194.robot.commands.Shooter.ShootBall;
import org.usfirst.frc.team2194.robot.commands.Shooter.ShooterHomePosition;
import org.usfirst.frc.team2194.robot.commands.Shooter.StopShooterMotion;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.InternalButton;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
	// // CREATING BUTTONS
	// One type of button is a joystick button which is any button on a
	// joystick.
	// You create one by telling it which joystick it's on and which button
	// number it is.
	// Joystick stick = new Joystick(port);
	// Button button = new JoystickButton(stick, buttonNumber);

	// Another type of button you can create is a DigitalIOButton, which is
	// a button or switch hooked up to the cypress module. These are useful if
	// you want to build a customized operator interface.
	// Button button = new DigitalIOButton(1);
	// There are a few additional built in buttons you can use. Additionally,
	// by subclassing Button you can create custom triggers and bind those to
	// commands the same as any other Button.
	// // TRIGGERING COMMANDS WITH BUTTONS
	// Once you have a button, it's trivial to bind it to a button in one of
	// three ways:
	// Start the command when the button is pressed and let it run the command
	// until it is finished as determined by it's isFinished method.
	// button.whenPressed(new ExampleCommand());
	// Run the command while the button is being held down and interrupt it once
	// the button is released.
	// button.whileHeld(new ExampleCommand());
	// Start the command when the button is released and let it run the command
	// until it is finished as determined by it's isFinished method.
	// button.whenReleased(new ExampleCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	private static boolean showAllButtons;
	private static InternalButton setPIDFMotors;
	private static InternalButton setPIDFMotorsGyro;
	private static InternalButton togglePIDMotors;
	private static InternalButton resetGyro;
	private static InternalButton toggleGyroOnOff;
	private static InternalButton zeroGyroYaw;
	private static InternalButton toggleYawComp;
	private static InternalButton toggleRollComp;
	private static InternalButton clearRobotStuck;

	private static InternalButton resetEncoders;
	private static InternalButton positionToGyro;
	private static InternalButton startPositionLinear;
	private static InternalButton startPitchPosition;
	private static InternalButton singleJoystickToggle;
	private static InternalButton setPIDFLinearPosition;
	private static InternalButton selectChoosersSettings;
	private static InternalButton doSelectedDefense;

	private static InternalButton doSelectedSlotMoves;

	private static InternalButton startMotionRight;
	private static InternalButton startMotionLeft;
	private static InternalButton startMotionBoth;

	private static InternalButton startMotionAngle;
	private static InternalButton startAngleToCamera;

	private static InternalButton jogPlusAngle;
	private static InternalButton jogMinusAngle;

	private static InternalButton jogUpLifter;
	private static InternalButton jogDownLifter;

	private static InternalButton useGoalVisionToggle;
	private static InternalButton autoShootCommand;

	private static InternalButton stopMotion;

	private static InternalButton setWheelDiameter;

	private static InternalButton solenoidToggle1;
	private static InternalButton solenoidToggle2;
	private static InternalButton solenoidToggle3;
	private static InternalButton solenoidToggle5;

	private static InternalButton raiseLift1;
	private static InternalButton lowerLift1;
	private static InternalButton raiseLift2;
	private static InternalButton lowerLift2;

	private static InternalButton cancelAll;
	private static InternalButton setTargetYawAngle;

	private static InternalButton twistToVision;
	private static InternalButton homeShooter;
	private static InternalButton disableSoftLimits;
	
	private static JoystickButton driveShifter;
	private static JoystickButton intakeBall;
	private static JoystickButton outtakeBall;
	private static JoystickButton shootBall;
	private static JoystickButton pivotDown;
	private static JoystickButton pivotUp;
	private static JoystickButton pivotDownSlow;
	private static JoystickButton pivotUpSlow;
	private static JoystickButton backShootPosition;
	private static JoystickButton intakePosition;
	private static JoystickButton shootPosition;

	private static JoystickButton gamepadLift1Toggle;
	private static JoystickButton gamepadLift2Toggle;
	private static JoystickButton gamepadPortChevToggle;
	private static JoystickButton gamepadShootBall;
	private static JoystickButton gamepadIntakeBall;
	private static JoystickButton gamepadOuttakeBall;
	private static JoystickButton gamepadLiftWinchUp;
	private static JoystickButton gamepadLiftWinchDown;
	private static JoystickButton gamepadFlashlightToggle;

	public Joystick joystick1;
	public Joystick joystick2;
	public Joystick gamepad;

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	public OI() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

		joystick1 = new Joystick(1);
		joystick2 = new Joystick(2);
		gamepad = new Joystick(0);

		driveShifter = new JoystickButton(joystick2, 5);
		intakeBall = new JoystickButton(joystick2, 2);
		outtakeBall = new JoystickButton(joystick2, 1);
		shootBall = new JoystickButton(joystick2, 11);
		pivotDown = new JoystickButton(joystick2, 7);
		pivotUp = new JoystickButton(joystick2, 8);
		pivotDownSlow = new JoystickButton(joystick2, 4);
		pivotUpSlow = new JoystickButton(joystick2, 3);
		backShootPosition = new JoystickButton(joystick2, 9);
		intakePosition = new JoystickButton(joystick2, 10);
		shootPosition = new JoystickButton(joystick2, 12);
		startPitchPosition = new InternalButton();

		gamepadLift1Toggle = new JoystickButton(gamepad, 5);
		gamepadLift2Toggle = new JoystickButton(gamepad, 7);
		gamepadPortChevToggle = new JoystickButton(gamepad, 1);
		gamepadShootBall = new JoystickButton(gamepad, 10);
		gamepadIntakeBall = new JoystickButton(gamepad, 6);
		gamepadOuttakeBall = new JoystickButton(gamepad, 8);
		gamepadLiftWinchUp = new JoystickButton(gamepad, 2); //Ethan needs to change
		gamepadLiftWinchDown = new JoystickButton(gamepad, 4); //Ethan needs to change
		gamepadFlashlightToggle = new JoystickButton(gamepad, 3);

		setPIDFMotors = new InternalButton();
		setPIDFMotorsGyro = new InternalButton();
		setPIDFLinearPosition = new InternalButton();

		togglePIDMotors = new InternalButton();
		resetGyro = new InternalButton();
		toggleGyroOnOff = new InternalButton();
		resetEncoders = new InternalButton();
		positionToGyro = new InternalButton();
		startPositionLinear = new InternalButton();
		singleJoystickToggle = new InternalButton();
		zeroGyroYaw = new InternalButton();
		toggleYawComp = new InternalButton();
		toggleRollComp = new InternalButton();
		homeShooter = new InternalButton();
		useGoalVisionToggle = new InternalButton();
		autoShootCommand = new InternalButton();
		clearRobotStuck = new InternalButton();
		disableSoftLimits = new InternalButton();
		
		
		// defense crossing buttons
		selectChoosersSettings = new InternalButton();
		doSelectedDefense = new InternalButton();
		doSelectedSlotMoves = new InternalButton();
		// shooter buttons

		startMotionLeft = new InternalButton();
		startMotionRight = new InternalButton();

		startMotionBoth = new InternalButton();

		startMotionAngle = new InternalButton();
		startAngleToCamera = new InternalButton();

		jogPlusAngle = new InternalButton();
		jogMinusAngle = new InternalButton();

		jogUpLifter = new InternalButton();
		jogDownLifter = new InternalButton();

		stopMotion = new InternalButton();
		setWheelDiameter = new InternalButton();

		solenoidToggle1 = new InternalButton();
		solenoidToggle2 = new InternalButton();
		solenoidToggle3 = new InternalButton();
		solenoidToggle5 = new InternalButton();

		raiseLift1 = new InternalButton();
		lowerLift1 = new InternalButton();
		raiseLift2 = new InternalButton();
		lowerLift2 = new InternalButton();

		cancelAll = new InternalButton();
		setTargetYawAngle = new InternalButton();

		twistToVision = new InternalButton();

		SmartDashboard.putData("SetPIDF Motors", setPIDFMotors);
		SmartDashboard.putData("SetPIDF Motors Gyro", setPIDFMotorsGyro);
		SmartDashboard.putData("Toggle PID Motors", togglePIDMotors);
		SmartDashboard.putData("Reset Gyro", resetGyro);
		SmartDashboard.putData("Toggle Gyro On Off", toggleGyroOnOff);
		SmartDashboard.putData("Toggle Yaw Comp", toggleYawComp);
		SmartDashboard.putData("Toggle Roll Comp", toggleRollComp);
		SmartDashboard.putData("Clear Stuck Robot", clearRobotStuck);
		SmartDashboard.putData("Disable Soft Limits", disableSoftLimits);

		SmartDashboard.putData("Zero Gyro Yaw", zeroGyroYaw);
		SmartDashboard.putData("Toggle Yaw Comp", toggleYawComp);
		SmartDashboard.putData("Toggle Roll Comp", toggleRollComp);

		SmartDashboard.putData("Reset Encoders", resetEncoders);
		SmartDashboard.putData("Position to Gyro", positionToGyro);
		SmartDashboard.putData("Start Linear Position", startPositionLinear);
		SmartDashboard.putData("Single Joystick Toggle", singleJoystickToggle);
		SmartDashboard.putData("Set Linear Position PIDF",
				setPIDFLinearPosition);

		SmartDashboard.putData("Start Motion Both Shooters", startMotionBoth);

		// SmartDashboard.putData("Start Motion Left Shooter", startMotionLeft);
		// SmartDashboard.putData("Start Motion Right Shooter",
		// startMotionRight);
		SmartDashboard.putData("Start Motion Angle Shooter", startMotionAngle);
		SmartDashboard.putData("Start Angle to Camera", startAngleToCamera);

		SmartDashboard.putData("Stop Motion Shooter", stopMotion);
		SmartDashboard.putData("Jog Plus Shooter Angle", jogPlusAngle);
		SmartDashboard.putData("Jog Minus Shooter Angle", jogMinusAngle);

		SmartDashboard.putData("Jog Up Lifter", jogUpLifter);
		SmartDashboard.putData("Jog Down Lifter", jogDownLifter);

		SmartDashboard.putData("Select Choosers Settings",
				selectChoosersSettings);
		SmartDashboard.putData("Do Selected Defense", doSelectedDefense);
		SmartDashboard.putData("Do Selected Slot Move", doSelectedSlotMoves);
		SmartDashboard.putData("Set Wheel Diameter", setWheelDiameter);

		SmartDashboard.putData("Use Goal Vision Toggle", useGoalVisionToggle);
		SmartDashboard.putData("Auto Shoot Command", autoShootCommand);
		SmartDashboard.putData("Home Shooter", homeShooter);

		SmartDashboard.putData("Toggle Lift 1", solenoidToggle1);
		SmartDashboard.putData("Toggle Lift 2", solenoidToggle2);
		SmartDashboard.putData("Toggle Port Chev", solenoidToggle3);
		SmartDashboard.putData("Toggle Shoot Ball", solenoidToggle5);

		SmartDashboard.putData("Raise Lift 1", raiseLift1);
		SmartDashboard.putData("Lower Lift 1", lowerLift1);
		SmartDashboard.putData("Raise Lift 2", raiseLift2);
		SmartDashboard.putData("Lower Lift 2", lowerLift2);

		SmartDashboard.putData("Cancel All Commands", cancelAll);
		SmartDashboard.putData("Set Target Yaw Angle", setTargetYawAngle);

		SmartDashboard.putData("Vision Orient Enable", twistToVision);
		SmartDashboard.putData("Start Pitch Position", startPitchPosition);

		setPIDFMotors.whenPressed(new SetPIDFMotors());
		setPIDFMotorsGyro.whenPressed(new SetPIDFMotorsGyro());
		togglePIDMotors.whenPressed(new TogglePIDMotors());
		resetGyro.whenPressed(new ResetGyro());
		toggleGyroOnOff.whenPressed(new ToggleGyroOnOff());
		toggleYawComp.whenPressed(new ToggleYawComp());
		toggleRollComp.whenPressed(new ToggleRollComp());
		clearRobotStuck.whenPressed(new ClearRobotStuck());

		resetEncoders.whenPressed(new ResetEncoders());
		positionToGyro.whenPressed(new GetOrientData());
		zeroGyroYaw.whenPressed(new ZeroGyroYaw());
		homeShooter.whenPressed(new ShooterHomePosition());
		solenoidToggle1.whenPressed(new SolenoidToggleLift1());
		solenoidToggle2.whenPressed(new SolenoidToggleLift2());
		solenoidToggle3.whenPressed(new SolenoidTogglePortChev());
		solenoidToggle5.whenPressed(new SolenoidToggleShootBall());
		disableSoftLimits.whenPressed(new DisableSoftLimits());

		raiseLift1.whenPressed(new LiftOneRaise());
		raiseLift2.whenPressed(new LiftTwoRaise());
		lowerLift1.whenPressed(new LiftOneLower());
		lowerLift2.whenPressed(new LiftTwoLower());

		cancelAll.whenPressed(new CancelAll());
		setTargetYawAngle.whenPressed(new SetTargetYaw(0));
		twistToVision.whenPressed(new GetVisionOrientData());
		startPitchPosition.whenPressed(new GetPitchData());

		startMotionBoth.whenPressed(new GetBothShootersData());
		startMotionRight.whenPressed(new GetRightShooterData());
		startMotionLeft.whenPressed(new GetLeftShooterData());
		startMotionAngle.whenPressed(new GetAngleShooterData());

		startAngleToCamera
				.whileHeld(new PositionAngleShooterToCamera(.25, 100));

		stopMotion.whenPressed(new StopShooterMotion());
		jogPlusAngle.whileHeld(new JogPlusShooter(.75));
		jogMinusAngle.whileHeld(new JogMinusShooter(-.75));

		jogUpLifter.whileHeld(new JogUpLifter());
		jogDownLifter.whileHeld(new JogDownLifter());

		useGoalVisionToggle.whenPressed(new UseGoalVisionToggle());
		autoShootCommand.whenPressed(new AutoShootGroup());

		startPositionLinear.whenPressed(new GetPositionDataLinear());

		setWheelDiameter.whenPressed(new SetWheelDiameter());

		singleJoystickToggle.whenPressed(new SingleJoystickToggle());
		setPIDFLinearPosition.whenPressed(new SetPIDFLinearPosition());

		selectChoosersSettings.whenPressed(new SelectChoices());
		doSelectedDefense.whenPressed(new SelectedDefense());

		doSelectedSlotMoves.whenPressed(new SelectedSlotMove());

		driveShifter.whenPressed(new EngageHighGear());
		driveShifter.whenReleased(new EngageLowGear());
		intakeBall.whileHeld(new IntakeBall());
		outtakeBall.whileHeld(new OuttakeBall());
		shootBall.whenPressed(new ShootBall());
		pivotDown.whileHeld(new JogPlusShooter(.75));
		pivotUp.whileHeld(new JogMinusShooter(-.75));
		pivotDownSlow.whileHeld(new JogPlusShooter(.25));
		pivotUpSlow.whileHeld(new JogMinusShooter(-.25));
		backShootPosition.whenPressed(new PositionAngleShooter(40, .5, 5));
		intakePosition.whenPressed(new PositionAngleShooter(164, .5, 5));
		shootPosition.whileHeld(new PositionAngleShooterToCamera(.3, 100)); //was .2 .25

		gamepadLift1Toggle.whenPressed(new SolenoidToggleLift1());
		gamepadLift2Toggle.whenPressed(new SolenoidToggleLift2());
		gamepadPortChevToggle.whenPressed(new SolenoidTogglePortChev());
		gamepadShootBall.whenPressed(new ShootBall());
		gamepadIntakeBall.whileHeld(new IntakeBall());
		gamepadOuttakeBall.whileHeld(new OuttakeBall());
		gamepadLiftWinchUp.whileHeld(new JogUpLifter());
		gamepadLiftWinchDown.whileHeld(new JogDownLifter());
		gamepadFlashlightToggle.whenPressed(new FlashlightToggle());
		
		// SmartDashboard Buttons
		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	}

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
	public Joystick getJoystick1() {
		return joystick1;
	}

	public Joystick getJoystick2() {
		return joystick2;
	}

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}
